---
- name: Configure awx

  hosts: awx_app

  become: yes

  vars:

    awx_cli_conf: ~/.tower_cli.cfg
    awx_settings: {}
    awx_nolog: yes

  roles:

    - nephelaiio.plugins

  tasks:

    - name: include vars files
      include_vars:
        dir: "{{ item }}"
      loop: "{{ vars_dirs | list }}"
      ignore_errors: yes
      when: vars_dirs is defined

    - name: install tower cli
      pip:
        name: ansible-tower-cli
        state: present

    - name: create tower cli configuration file
      template:
        src: tower_cli.cfg.j2
        dest: "{{ awx_cli_conf }}"
        mode: 0600
      vars:
        host: "{{ awx_url | urlsplit('hostname') }}"
        username: "{{ awx_admin_user | default('admin') }}"
        password: "{{ awx_admin_pass }}"
        verify_ssl: false
        verbose: false

    - block:

        - name: manage awx settings
          tower_settings:
            name: "{{ item.key }}"
            value: "{{ item.value }}"
          loop_control:
            label: "{{ item.key }}"
          loop: "{{ awx_settings | dict2items }}"

        - name: destroy awx notifications
          include_tasks: config/notification_destroy.yml
          vars:
            organization: "{{ item.0 }}"
            notification: "{{ item.1 }}"
          loop_control:
            label: "{{ notification.name }}"
          loop: "{{ awx_organizations | subelements('notifications', skip_missing='yes') }}"
          when: organization.state | default('present') == 'absent' or notification.state | default('present') == 'absent'
          no_log: "{{ awx_nolog }}"

        - name: destroy awx job schedules
          include_tasks: config/schedule_destroy.yml
          vars:
            schedule: "{{ item }}"
          loop_control:
            label: "{{ schedule.name }}"
          loop: "{{ awx_schedules | default([]) }}"
          when: schedule.state | default('present') == 'absent'
          no_log: "{{ awx_nolog }}"

        - name: destroy awx workflows
          include_tasks: config/workflow_destroy.yml
          vars:
            organization: "{{ item.0 }}"
            workflow: "{{ item.1 }}"
          loop_control:
            label: "{{ workflow.name }}"
          loop: "{{ awx_organizations | subelements('workflows', skip_missing='yes') }}"
          when: organization.state | default('present') == 'absent' or workflow.state | default('present') == 'absent'
          no_log: "{{ awx_nolog }}"

        - name: destroy awx job templates
          command: "awx-cli job_template delete -n {{ template.name | quote }}"
          vars:
            template: "{{ item }}"
          loop_control:
            label: "{{ template.name }}"
          loop: "{{ awx_templates | default([]) }}"
          when: template.state | default('present') == 'absent'
          no_log: "{{ awx_nolog }}"

        - name: destroy awx inventories
          include_tasks: config/inventory_destroy.yml
          vars:
            organization: "{{ item.0 }}"
            inventory: "{{ item.1 }}"
          loop_control:
            label: "{{ inventory.name }}"
          loop: "{{ awx_organizations | subelements('inventories', skip_missing='yes') }}"
          when: organization.state | default('present') == 'absent' or inventory.state | default('present') == 'absent'
          no_log: "{{ awx_nolog }}"

        - name: destroy awx projects
          tower_project:
            organization: "{{ organization.name }}"
            name: "{{ project.name }}"
            state: absent
          vars:
            organization: "{{ item.0 }}"
            project: "{{ item.1 }}"
          loop_control:
            label: "{{ project.name }}"
          loop: "{{ awx_organizations | subelements('projects', skip_missing='yes') }}"
          when: organization.state | default('present') == 'absent' or project.state | default('present') == 'absent'
          no_log: "{{ awx_nolog }}"

        - name: destroy awx credentials
          tower_credential:
            organization: "{{ organization.name }}"
            name: "{{ credential.name }}"
            kind: "{{ credential.kind }}"
            state: absent
          vars:
            organization: "{{ item.0 }}"
            credential: "{{ item.1 }}"
          loop_control:
            label: "{{ credential.name }}"
          loop: "{{ awx_organizations | subelements('credentials', skip_missing='yes') }}"
          when: organization.state | default('present') == 'absent' or credential.state | default('present') == 'absent'
          no_log: "{{ awx_nolog }}"

        - name: destroy awx organizations
          tower_organization:
            name: "{{ organization.name }}"
            state: absent
          vars:
            organization: "{{ item }}"
          loop_control:
            label: "{{ organization.name }}"
          loop: "{{ awx_organizations | list }}"
          when: organization.state | default('present') == 'absent'
          no_log: "{{ awx_nolog }}"

        - name: create awx organizations
          tower_organization:
            name: "{{ organization.name }}"
            state: present
          vars:
            organization: "{{ item }}"
          loop_control:
            label: "{{ organization.name }}"
          loop: "{{ awx_organizations | list }}"
          when: item.state | default('present') == 'present'
          no_log: "{{ awx_nolog }}"

        - name: create awx credentials
          tower_credential:
            organization: "{{ organization.name }}"
            name: "{{ credential.name }}"
            kind: "{{ credential.kind }}"
            state: present
            become_password: "{{ credential.become_password | default(omit) }}"
            become_username: "{{ credential.become_username | default(omit) }}"
            description: "{{ credential.description | default(omit) }}"
            password: "{{ credential.password | default(omit) }}"
            project: "{{ credential.project | default(omit) }}"
            ssh_key_data: "{{ credential.ssh_key_data | default(omit) }}"
            ssh_key_unlock: "{{ credential.ssh_key_unlock | default(omit) }}"
            team: "{{ credential.team | default(omit) }}"
            username: "{{ credential.username | default(omit) }}"
            vault_id: "{{ credential.vault_id | default(omit) }}"
            vault_password: "{{ credential.vault_password | default(omit) }}"
          vars:
            organization: "{{ item.0 }}"
            credential: "{{ item.1 }}"
          loop_control:
            label: "{{ credential.name }}"
          loop: "{{ awx_organizations | subelements('credentials', skip_missing='yes') }}"
          when: organization.state | default('present') == 'present' and credential.state | default('present') == 'present'
          no_log: "{{ awx_nolog }}"

        - name: create awx projects
          include_tasks: config/project_create.yml
          vars:
            organization: "{{ item.0 }}"
            project: "{{ item.1 }}"
          loop_control:
            label: "{{ project.name }}"
          loop: "{{ awx_organizations | subelements('projects', skip_missing='yes') }}"
          when: organization.state | default('present') == 'present' and project.state | default('present') == 'present'
          no_log: "{{ awx_nolog }}"

        - name: create awx inventories
          include_tasks: config/inventory_create.yml
          vars:
            organization: "{{ item.0 }}"
            inventory: "{{ item.1 }}"
          loop_control:
            label: "{{ inventory.name }}"
          loop: "{{ awx_organizations | subelements('inventories', skip_missing='yes') }}"
          when: organization.state | default('present') == 'present' and inventory.state | default('present') == 'present'
          no_log: "{{ awx_nolog }}"

        - name: create awx job templates
          tower_job_template:
            name: "{{ template.name }}"
            playbook: "{{ template.playbook }}"
            project: "{{ template.project }}"
            job_type: "{{ template.job_type | default('run') }}"
            credential: "{{ template.credential }}"
            description: "{{ template.description | default(omit) }}"
            diff_mode_enabled: "{{ template.diff_mode_enabled | default(omit) }}"
            fact_caching_enabled: "{{ template.fact_caching_enabled | default(omit) }}"
            force_handers_enabled: "{{ template.force_handers_enabled | default(omit) }}"
            forks: "{{ template.forks | default(omit) }}"
            host_config_key: "{{ template.host_config_key | default(omit) }}"
            inventory: "{{ template.inventory | default(omit) }}"
            job_tags: "{{ template.job_tags | default(omit) }}"
            limit: "{{ template.limit | default(omit) }}"
            skip_tags: "{{ template.skip_tags | default(omit) }}"
            vault_credential: "{{ template.vault_credential | default(omit) }}"
            verbosity: "{{ template.verbosity | default(omit) }}"
          vars:
            template: "{{ item }}"
          loop_control:
            label: "{{ template.name }}"
          loop: "{{ awx_templates | default([]) }}"
          when: template.state | default('present') == 'present'
          no_log: "{{ awx_nolog }}"

        - name: create awx workflows
          include_tasks: config/workflow_create.yml
          vars:
            organization: "{{ item.0 }}"
            workflow: "{{ item.1 }}"
          loop_control:
            label: "{{ workflow.name }}"
          loop: "{{ awx_organizations | subelements('workflows', skip_missing='yes') }}"
          when: organization.state | default('present') == 'present' and workflow.state | default('present') == 'present'
          no_log: "{{ awx_nolog }}"

        - name: create awx job schedules
          include_tasks: config/schedule_create.yml
          vars:
            schedule: "{{ item }}"
          loop_control:
            label: "{{ schedule.name }}"
          loop: "{{ awx_schedules | default([]) }}"
          when: schedule.state | default('present') == 'present'
          no_log: "{{ awx_nolog }}"

        - name: create awx notifications
          include_tasks: config/notification_create.yml
          vars:
            organization: "{{ item.0 }}"
            notification: "{{ item.1 }}"
          loop_control:
            label: "{{ notification.name }}"
          loop: "{{ awx_organizations | subelements('notifications', skip_missing='yes') }}"
          when: organization.state | default('present') == 'present' and notification.state | default('present') == 'present'
          no_log: "{{ awx_nolog }}"
          tags:
            - notifications

      run_once: yes
