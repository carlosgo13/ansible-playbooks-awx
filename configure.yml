---
- name: Configure awx

  hosts: awx_app

  become: yes

  vars:

    awx_cli_conf: ~/.tower_cli.cfg
    awx_nolog: yes

  collections:

    - awx.awx

  roles:

    - nephelaiio.plugins

  tasks:

    - name: set awx config url
      set_fact:
        awx_local_url: "http://localhost:{{ awx_container_port | default('80') }}"
      when: awx_local_url is undefined

    - name: include vars files
      include_vars:
        dir: "{{ item }}"
      loop: "{{ vars_dirs | list }}"
      ignore_errors: yes
      when: vars_dirs is defined

    - name: install tower cli
      pip:
        name: ansible-tower-cli
        state: present

    - name: create tower cli configuration file
      template:
        src: tower_cli.cfg.j2
        dest: "{{ awx_cli_conf }}"
        mode: 0600
      vars:
        host: "{{ awx_local_url }}"
        username: "{{ awx_admin_user | default('admin') }}"
        password: "{{ awx_admin_pass }}"
        verify_ssl: false
        verbose: false

    - block:

        - name: manage awx settings
          tower_settings:
            controller_host: "{{ awx_local_url | urlsplit('hostname') }}"
            controller_username: "{{ awx_admin_user | default('admin') }}"
            controller_password: "{{ awx_admin_pass }}"
            validate_certs: no
            name: "{{ item }}"
            value: "{{ awx_settings[item] | string }}"
          loop: "{{ awx_settings.keys() | list | default([]) }}"
          loop_control:
            label: "{{ item }}"
          register: settings_results
          tags:
            - settings

        - name: destroy awx workflows
          workflow_job_template:
            controller_host: "{{ awx_local_url | urlsplit('hostname') }}"
            controller_username: "{{ awx_admin_user | default('admin') }}"
            controller_password: "{{ awx_admin_pass }}"
            validate_certs: no
            name: "{{ workflow.name }}"
            organization: "{{ organization.name }}"
            state: absent
          vars:
            organization: "{{ item.0 }}"
            workflow: "{{ item.1 }}"
          loop_control:
            label: "{{ workflow.name }}"
          loop: "{{ awx_organizations | subelements('workflows', skip_missing='yes') }}"
          when:
            - organization.state | default('present') == 'absent' or workflow.state | default('present') == 'absent'
            - awx_workflow_manage | default('yes') | bool
          tags:
            - workflows

        - name: destroy awx job templates
          job_template:
            controller_host: "{{ awx_local_url | urlsplit('hostname') }}"
            controller_username: "{{ awx_admin_user | default('admin') }}"
            controller_password: "{{ awx_admin_pass }}"
            validate_certs: no
            name: "{{ template.name }}"
            state: absent
          vars:
            template: "{{ item }}"
          loop_control:
            label: "{{ template.name }}"
          loop: "{{ (awx_templates | default([])) | list }}"
          when:
            - template.state | default('present') == 'absent'
            - awx_template_manage | default('yes') | bool
          tags:
            - templates

        - name: destroy awx inventory sources
          inventory_source:
            controller_host: "{{ awx_local_url | urlsplit('hostname') }}"
            controller_username: "{{ awx_admin_user | default('admin') }}"
            controller_password: "{{ awx_admin_pass }}"
            validate_certs: no
            name: "{{ inventory.name }}"
            inventory: "{{ inventory.name }}"
            state: absent
          vars:
            organization: "{{ item.0 }}"
            inventory: "{{ item.1 }}"
          loop_control:
            label: "{{ inventory.name }}"
          loop: "{{ awx_organizations | subelements('inventories', skip_missing='yes') }}"
          when:
            - organization.state | default('present') == 'absent' or inventory.state | default('present') == 'absent'
            - awx_inventory_manage | default('yes') | bool
          tags:
            - inventories

        - name: destroy awx inventories
          inventory:
            controller_host: "{{ awx_local_url | urlsplit('hostname') }}"
            controller_username: "{{ awx_admin_user | default('admin') }}"
            controller_password: "{{ awx_admin_pass }}"
            validate_certs: no
            name: "{{ inventory.name }}"
            organization: "{{ organization.name }}"
            state: absent
          vars:
            organization: "{{ item.0 }}"
            inventory: "{{ item.1 }}"
          loop_control:
            label: "{{ inventory.name }}"
          loop: "{{ awx_organizations | subelements('inventories', skip_missing='yes') }}"
          when:
            - organization.state | default('present') == 'absent' or inventory.state | default('present') == 'absent'
            - awx_inventory_manage | default('yes') | bool
          tags:
            - inventories

        - name: destroy awx projects
          project:
            controller_host: "{{ awx_local_url | urlsplit('hostname') }}"
            controller_username: "{{ awx_admin_user | default('admin') }}"
            controller_password: "{{ awx_admin_pass }}"
            validate_certs: no
            name: "{{ project.name }}"
            organization: "{{ organization.name }}"
            state: absent
          vars:
            organization: "{{ item.0 }}"
            project: "{{ item.1 }}"
          loop_control:
            label: "{{ project.name }}"
          loop: "{{ awx_organizations | subelements('projects', skip_missing='yes') }}"
          when:
            - organization.state | default('present') == 'absent' or project.state | default('present') == 'absent'
            - awx_project_manage | default('yes') | bool
          tags:
            - projects

        - name: destroy awx credentials
          credential:
            controller_host: "{{ awx_local_url | urlsplit('hostname') }}"
            controller_username: "{{ awx_admin_user | default('admin') }}"
            controller_password: "{{ awx_admin_pass }}"
            validate_certs: no
            name: "{{ credential.name }}"
            organization: "{{ organization.name }}"
            kind: "{{ credential.kind | default(omit) }}"
            credential_type: "{{ credential.credential_type | default(omit) }}"
            state: absent
          vars:
            organization: "{{ item.0 }}"
            credential: "{{ item.1 }}"
          loop_control:
            label: "{{ credential.name }}"
          loop: "{{ awx_organizations | subelements('credentials', skip_missing='yes') }}"
          when:
            - organization.state | default('present') == 'absent' or credential.state | default('present') == 'absent'
            - awx_credentials_manage | default('yes') | bool
          no_log: "{{ awx_nolog }}"
          tags:
            - credentials
          ignore_errors: yes

        - name: destroy awx galaxy credentials
          credential:
            controller_host: "{{ awx_local_url | urlsplit('hostname') }}"
            controller_username: "{{ awx_admin_user | default('admin') }}"
            controller_password: "{{ awx_admin_pass }}"
            validate_certs: no
            organization: "{{ organization.name }}"
            name: "{{ galaxy_credential.name }}"
            credential_type: "{{ galaxy_credential.credential_type }}"
            state: absent
          vars:
            organization: "{{ item.0 }}"
            galaxy_credential: "{{ item.1 }}"
          loop_control:
            label: "{{ galaxy_credential.name }}"
          loop: "{{ awx_organizations | subelements('galaxy_credentials', skip_missing='yes') }}"
          when:
            - organization.state | default('present') == 'absent' or galaxy_credential.state | default('present') == 'absent'
            - awx_credentials_manage | default('yes') | bool
          no_log: "{{ awx_nolog }}"
          tags:
            - galaxy_credentials

        - name: destroy awx instance groups
          instance_group:
            controller_host: "{{ awx_local_url | urlsplit('hostname') }}"
            controller_username: "{{ awx_admin_user | default('admin') }}"
            controller_password: "{{ awx_admin_pass }}"
            validate_certs: no
            name: "{{ instance_group.name }}"
            state: absent
          vars:
            instance_group: "{{ item.1 }}"
          loop_control:
            label: "{{ instance_group.name }}"
          loop: "{{ awx_organizations | subelements('instance_groups', skip_missing='yes') }}"
          when:
            - instance_group.state | default('present') == 'absent'
            - awx_instance_group_manage | default('yes') | bool
          tags:
            - instance_groups

        - name: manage awx organizations
          organization:
            controller_host: "{{ awx_local_url | urlsplit('hostname') }}"
            controller_username: "{{ awx_admin_user | default('admin') }}"
            controller_password: "{{ awx_admin_pass }}"
            validate_certs: no
            name: "{{ organization.name }}"
            state: "{{ organization.state | default('present') }}"
          vars:
            organization: "{{ item }}"
          loop_control:
            label: "{{ organization.name }}"
          loop: "{{ awx_organizations | list }}"
          when:
            - organization.state | default('present') != 'absent'
            - awx_organization_manage | default('yes') | bool

        - name: manage awx teams
          team:
            controller_host: "{{ awx_local_url | urlsplit('hostname') }}"
            controller_username: "{{ awx_admin_user | default('admin') }}"
            controller_password: "{{ awx_admin_pass }}"
            validate_certs: no
            name: "{{ team.key }}"
            organization: "{{ team.value.organization }}"
            state: "{{ team.value.state | default('present') }}"
          loop_control:
            loop_var: team
            label: "{{ team.key }}"
          loop: "{{ lookup('dict', awx_teams, wantlist=True) }}"
          when: awx_organization_manage | default('yes') | bool
          tags:
            - teams

        - name: create awx galaxy credentials
          credential:
            controller_host: "{{ awx_local_url | urlsplit('hostname') }}"
            controller_username: "{{ awx_admin_user | default('admin') }}"
            controller_password: "{{ awx_admin_pass }}"
            validate_certs: no
            organization: "{{ organization.name }}"
            name: "{{ galaxy_credential.name }}"
            credential_type: "{{ galaxy_credential.credential_type }}"
            inputs: "{{ galaxy_credential.inputs }}"
            state: present
          vars:
            organization: "{{ item.0 }}"
            galaxy_credential: "{{ item.1 }}"
          loop_control:
            label: "{{ galaxy_credential.name }}"
          loop: "{{ awx_organizations | subelements('galaxy_credentials', skip_missing='yes') }}"
          when:
            - organization.state | default('present') != 'absent'
            - galaxy_credential.state | default('present') != 'absent'
            - awx_organization_manage | default('yes') | bool
          tags:
            - galaxy_credentials

        - name: associate awx galaxy credentials
          organization:
            controller_host: "{{ awx_local_url | urlsplit('hostname') }}"
            controller_username: "{{ awx_admin_user | default('admin') }}"
            controller_password: "{{ awx_admin_pass }}"
            validate_certs: no
            name: "{{ organization.name }}"
            galaxy_credentials: "{{ galaxy_credentials_target }}"
            state: present
          vars:
            organization: "{{ item }}"
            galaxy_credentials_absent: "{{ organization.galaxy_credentials | rejectattr('state', 'undefined') | rejectattr('state', 'equalto', 'present') | map(attribute='name') | list }}"
            galaxy_credentials_all: "{{ organization.galaxy_credentials | map(attribute='name') | list }}"
            galaxy_credentials_target: "{{ galaxy_credentials_all | difference(galaxy_credentials_absent) }}"
          loop_control:
            label: "{{ organization.name }}"
          loop: "{{ awx_organizations | list }}"
          when:
            - organization.state | default('present') != 'absent'
            - galaxy_credentials_target | length > 0
            - awx_organization_manage | default('yes') | bool
          tags:
            - galaxy_credentials

        - name: create awx instance groups
          instance_group:
            controller_host: "{{ awx_local_url | urlsplit('hostname') }}"
            controller_username: "{{ awx_admin_user | default('admin') }}"
            controller_password: "{{ awx_admin_pass }}"
            validate_certs: no
            name: "{{ instance_group.name }}"
            is_container_group: "{{ instance_group.container_group | default('omit') }}"
            pod_spec_override: "{{ instance_group.pod_spec_override | default('omit') }}"
            state: present
          vars:
            organization: "{{ item.0 }}"
            instance_group: "{{ item.1 }}"
          loop_control:
            label: "{{ instance_group.name }}"
          loop: "{{ awx_organizations | subelements('instance_groups', skip_missing='yes') }}"
          when:
            - organization.state | default('present') != 'absent'
            - instance_group.state | default('present') != 'absent'
            - awx_organization_manage | default('yes') | bool
          no_log: "{{ awx_nolog }}"
          tags:
            - instance_groups

        - name: associate awx instance groups
          organization:
            controller_host: "{{ awx_local_url | urlsplit('hostname') }}"
            controller_username: "{{ awx_admin_user | default('admin') }}"
            controller_password: "{{ awx_admin_pass }}"
            validate_certs: no
            name: "{{ organization.name }}"
            instance_groups: "{{ instance_groups_target }}"
            state: present
          vars:
            organization: "{{ item }}"
            instance_groups_absent: "{{ organization.instance_groups | rejectattr('state', 'undefined') | rejectattr('state', 'equalto', 'present') | map(attribute='name') | list }}"
            instance_groups_all: "{{ organization.instance_groups | map(attribute='name') | list }}"
            instance_groups_target: "{{ instance_groups_all | difference(instance_groups_absent) }}"
          loop_control:
            label: "{{ organization.name }}"
          loop: "{{ awx_organizations | list }}"
          when:
            - organization.state | default('present') != 'absent'
            - instance_groups_target | length > 0
            - awx_organization_manage | default('yes') | bool
          tags:
            - instance_groups

        - name: create awx credentials
          credential:
            controller_host: "{{ awx_local_url | urlsplit('hostname') }}"
            controller_username: "{{ awx_admin_user | default('admin') }}"
            controller_password: "{{ awx_admin_pass }}"
            validate_certs: no
            organization: "{{ organization.name }}"
            name: "{{ credential.name }}"
            kind: "{{ credential.kind }}"
            become_password: "{{ credential.become_password | default(omit) }}"
            become_username: "{{ credential.become_username | default(omit) }}"
            description: "{{ credential.description | default(omit) }}"
            password: "{{ credential.password | default(omit) }}"
            project: "{{ credential.project | default(omit) }}"
            ssh_key_data: "{{ credential.ssh_key_data | default(omit) }}"
            ssh_key_unlock: "{{ credential.ssh_key_unlock | default(omit) }}"
            team: "{{ credential.team | default(omit) }}"
            username: "{{ credential.username | default(omit) }}"
            vault_password: "{{ credential.vault_password | default(omit) }}"
            inputs: "{{ (credential.kind == 'vault') | ternary(vault_inputs, {}) }}"
            state: present
          vars:
            organization: "{{ item.0 }}"
            credential: "{{ item.1 }}"
            vault_inputs:
              vault_id: "{{ credential.vault_id | default('') }}"
              vault_password: "{{ credential.vault_password | default('') }}"
          loop_control:
            label: "{{ credential.name }}"
          loop: "{{ awx_organizations | subelements('credentials', skip_missing='yes') }}"
          when:
            - organization.state | default('present') != 'absent'
            - credential.state | default('present') != 'absent'
            - awx_credentials_manage | default('yes') | bool
          tags:
            - credentials

        - name: create awx projects
          project:
            controller_host: "{{ awx_local_url | urlsplit('hostname') }}"
            controller_username: "{{ awx_admin_user | default('admin') }}"
            controller_password: "{{ awx_admin_pass }}"
            validate_certs: no
            name: "{{ project.name }}"
            organization: "{{ organization.name }}"
            description: "{{ project.description | default(omit) }}"
            scm_type: "{{ project.scm_type }}"
            scm_url: "{{ project.scm_url | default(omit) }}"
            scm_branch: "{{ project.scm_branch | default(omit) }}"
            scm_credential: "{{ project.scm_credential | default(omit) }}"
            scm_clean: "{{ project.scm_clean | default(omit) }}"
            scm_delete_on_update: "{{ project.scm_delete_on_update | default(omit) }}"
            scm_update_on_launch: "{{ project.scm_update_on_launch | default(omit) }}"
            scm_update_cache_timeout: "{{ project.scm_update_cache_timeout | default(omit) }}"
            timeout: "{{ project.job_timeout | default(omit) }}"
            state: present
          vars:
            organization: "{{ item.0 }}"
            project: "{{ item.1 }}"
          loop_control:
            label: "{{ project.name }}"
          loop: "{{ awx_organizations | subelements('projects', skip_missing='yes') }}"
          when:
            - organization.state | default('present') != 'absent'
            - project.state | default('present') != 'absent'
            - awx_project_manage | default('yes') | bool
          tags:
            - projects

        - name: create awx inventories
          inventory:
            controller_host: "{{ awx_local_url | urlsplit('hostname') }}"
            controller_username: "{{ awx_admin_user | default('admin') }}"
            controller_password: "{{ awx_admin_pass }}"
            validate_certs: no
            name: "{{ inventory.name }}"
            organization: "{{ organization.name }}"
          vars:
            organization: "{{ item.0 }}"
            inventory: "{{ item.1 }}"
          loop_control:
            label: "{{ inventory.name }}"
          loop: "{{ awx_organizations | subelements('inventories', skip_missing='yes') }}"
          when:
            - organization.state | default('present') != 'absent'
            - inventory.state | default('present') != 'absent'
            - awx_inventory_manage | default('yes') | bool
          tags:
            - inventories
          no_log: "{{ awx_nolog }}"

        - name: create awx inventory sources
          inventory:
            controller_host: "{{ awx_local_url | urlsplit('hostname') }}"
            controller_username: "{{ awx_admin_user | default('admin') }}"
            controller_password: "{{ awx_admin_pass }}"
            validate_certs: no
            name: "{{ inventory.name }}"
            organization: "{{ organization.name }}"
          vars:
            organization: "{{ item.0 }}"
            inventory: "{{ item.1 }}"
          loop_control:
            label: "{{ inventory.name }}"
          loop: "{{ awx_organizations | subelements('inventories', skip_missing='yes') }}"
          when:
            - organization.state | default('present') != 'absent'
            - inventory.state | default('present') != 'absent'
            - awx_inventory_manage | default('yes') | bool
          tags:
            - inventories
          no_log: "{{ awx_nolog }}"

        - name: create awx job templates
          job_template:
            controller_host: "{{ awx_local_url | urlsplit('hostname') }}"
            controller_username: "{{ awx_admin_user | default('admin') }}"
            controller_password: "{{ awx_admin_pass }}"
            validate_certs: no
            name: "{{ template.name }}"
            project: "{{ template.project }}"
            playbook: "{{ template.playbook }}"
            inventory: "{{ template.inventory | default(omit) }}"
            description: "{{ template.description | default(omit) }}"
            allow_simultaneous: "{{ template.allow_simultaneous | default(omit) }}"
            ask_credential_on_launch: "{{ template.ask_credentials | default(omit) }}"
            ask_inventory_on_launch: "{{ template.ask_inventory | default(omit) }}"
            ask_limit_on_launch: "{{ template.ask_limit | default(omit) }}"
            ask_variables_on_launch: "{{ template.ask_vars | default(omit) }}"
            ask_skip_tags_on_launch: "{{ template.ask_skip_tags | default(omit) }}"
            become_enabled: "{{ template.become_enabled | default(omit) }}"
            extra_vars: "{{ template.extra_vars | default(omit) }}"
            forks: "{{ template.forks | default(omit) }}"
            job_slice_count: "{{ template.slices | default(1) }}"
            job_tags: "{{ [template.job_tags | default('')] | flatten | join(',') }}"
            job_type: "{{ template.job_type | default('run') }}"
            limit: "{{ template.limit | default(omit) }}"
            skip_tags: "{{ [template.skip_tags | default('')] | flatten | join(',') }}"
            timeout: "{{ template.timeout | default(omit) }}"
            verbosity: "{{ template.verbosity | default(0) }}"
            credentials: "{{ template.credentials | default([]) | map(attribute='name') | list }}"
          vars:
            template: "{{ item }}"
          loop_control:
            label: "{{ template.name }}"
          loop: "{{ (awx_templates | default([])) | list }}"
          when:
            - template.state | default('present') != 'absent'
            - awx_template_manage | default('yes') | bool
          tags:
            - templates

        - name: manage awx workflows
          workflow_job_template:
            controller_host: "{{ awx_local_url | urlsplit('hostname') }}"
            controller_username: "{{ awx_admin_user | default('admin') }}"
            controller_password: "{{ awx_admin_pass }}"
            validate_certs: no
            name: "{{ workflow.name }}"
            organization: "{{ organization.name }}"
            inventory: "{{ template.inventory | default(omit) }}"
            description: "{{ workflow.description | default(omit) }}"
            ask_inventory_on_launch: "{{ workflow.ask_inventory | default(omit) }}"
            ask_limit_on_launch: "{{ workflow.ask_limit | default(omit) }}"
            ask_variables_on_launch: "{{ workflow.ask_vars | default(omit) }}"
            destroy_current_schema: yes
            extra_vars: "{{ workflow.extra_vars | default(omit) }}"
            scm_branch: "{{ workflow.branch | default(omit) }}"
            schema: '{{ workflow.schema | default(omit) }}'
          vars:
            organization: "{{ item.0 }}"
            workflow: "{{ item.1 }}"
          loop_control:
            label: "{{ workflow.name }}"
          loop: "{{ awx_organizations | subelements('workflows', skip_missing='yes') }}"
          when:
            - organization.state | default('present') == 'present'
            - workflow.state | default('present') == 'present'
            - awx_workflow_manage | default('yes') | bool
            - "'schema' in workflow"
          tags:
            - workflows

        - name: create awx job schedules
          schedule:
            controller_host: "{{ awx_local_url | urlsplit('hostname') }}"
            controller_username: "{{ awx_admin_user | default('admin') }}"
            controller_password: "{{ awx_admin_pass }}"
            validate_certs: no
            name: "{{ schedule.name }}"
            description: "{{ schedule.description | default(omit) }}"
            unified_job_template: "{{ schedule.job_template | default(omit) }}"
            inventory: "{{ schedule.inventory | default(omit) }}"
            enabled: "{{ schedule.enabled | default('yes') }}"
            rrule: "{{ schedule.rrule }}"
            state: absent
          vars:
            schedule: "{{ item }}"
          loop_control:
            label: "{{ schedule.name }}"
          loop: "{{ (awx_schedules | default([])) | list }}"
          when:
            - schedule.state | default('present') != 'absent'
            - awx_schedule_manage | default('yes') | bool
          tags:
            - schedules

        - name: manage awx users
          user:
            controller_host: "{{ awx_local_url | urlsplit('hostname') }}"
            controller_username: "{{ awx_admin_user | default('admin') }}"
            controller_password: "{{ awx_admin_pass }}"
            validate_certs: no
            username: "{{ item.username }}"
            password: "{{ item.password }}"
            first_name: "{{ item.first_name | default(omit) }}"
            last_name: "{{ item.last_name | default(omit) }}"
            email: "{{ item.email | default(omit) }}"
            is_superuser: "{{ item.superuser | default(omit) }}"
            state: "{{ item.state | default('present') }}"
          loop_control:
            label: "{{ item.username }}"
          loop: "{{ awx_users | default([]) | list }}"
          tags:
            - users

      run_once: yes
